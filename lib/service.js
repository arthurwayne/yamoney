// Generated by CoffeeScript 1.6.1
var MoneyService, WebService, iconv, qs,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

iconv = require('iconv-lite');

qs = require('querystring');

WebService = require('../../web-client').WebService;

MoneyService = (function(_super) {

  __extends(MoneyService, _super);

  MoneyService.DEFAULT_HOST = 'money.yandex.ru';

  MoneyService.DEFAULT_PORT = 443;

  function MoneyService(token, host, port) {
    this.token = token;
    if (host == null) {
      host = this.constructor.DEFAULT_HOST;
    }
    if (port == null) {
      port = this.constructor.DEFAULT_PORT;
    }
    if (this.token == null) {
      throw new Error('Token is undefined');
    }
    MoneyService.__super__.constructor.call(this, host, port);
  }

  MoneyService.prototype.path = function(options) {
    return '/api/' + options.name;
  };

  MoneyService.prototype.headers = function(body) {
    return {
      'authorization': 'Bearer ' + this.token,
      'content-type': 'application/x-www-form-urlencoded; charset=' + this.charset,
      'content-length': body.length
    };
  };

  MoneyService.prototype.body = function(options) {
    return iconv.encode(qs.stringify(options.data), this.charset);
  };

  MoneyService.prototype.parse = function(data, contentType) {
    switch (contentType) {
      case 'application/json':
        return this.parseJSON(data);
    }
  };

  return MoneyService;

})(WebService);

module.exports = MoneyService;
